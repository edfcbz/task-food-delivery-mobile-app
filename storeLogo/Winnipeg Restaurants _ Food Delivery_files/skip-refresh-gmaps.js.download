window.skipthedishes=window.skipthedishes||{},window.skipthedishes.GoogleMap=function(skipLogging){function _addMapMarker(longitude,latitude,markerUrl,size,anchor){var _latlng=_getLatLngCoordinate(latitude,longitude),_icon=markerUrl;"undefined"!=typeof size&&2===size.length&&(_icon={url:markerUrl,scaledSize:new google.maps.Size(size[0],size[1])}),"undefined"!=typeof anchor&&(_icon.anchor=new google.maps.Point(anchor.x,anchor.y));var _marker=new google.maps.Marker({position:_latlng,icon:_icon});_marker.setMap(_map),_bounds.extend(_latlng)}function _fitMapToMarkers(){_map.fitBounds(_bounds)}function _getLatLngCoordinate(latitude,longitude){return new google.maps.LatLng(latitude,longitude)}function _loadGoogleMaps(params){params.callbackFunctionName||skipLogging.critical("Missing callback function name for loading Google Maps");var script=window.document.createElement("script"),callbackFunctionName=params.callbackFunctionName||"";script.type="text/javascript",script.src="https://maps.googleapis.com/maps/api/js?libraries=places&callback="+callbackFunctionName+"&channel=skipv2&client="+_googleMapsKey,_googleMapsApiVersion&&(script.src+="&v="+_googleMapsApiVersion),window.document.body.appendChild(script)}function _initializeGoogleMaps(params){var $container=params.$container.css("background-color",_mapBackgroundColor),mapOptions={styles:_mapStyles,zoom:params.zoom,mapTypeId:window.google.maps.MapTypeId.ROADMAP,streetViewControl:!1,mapTypeControl:!1,zoomControl:!1,scaleControl:!1,maxZoom:17,minZoom:12};return new window.google.maps.Map($container[0],mapOptions)}function _loadStaticGoogleMaps(params){function _bound(value,opt_min,opt_max){return null!==opt_min&&(value=Math.max(value,opt_min)),null!==opt_max&&(value=Math.min(value,opt_max)),value}function _degreesToRadians(deg){return deg*(Math.PI/180)}function radiansToDegrees(rad){return rad/(Math.PI/180)}function MercatorProjection(){this.pixelOrigin=new google.maps.Point(MERCATOR_RANGE/2,MERCATOR_RANGE/2),this.pixelsPerLngDegree=MERCATOR_RANGE/360,this.pixelsPerLngRadian=MERCATOR_RANGE/(2*Math.PI)}function Coordinate(latitude,longitude,projection){this.latitude=latitude,this.longitude=longitude,this.projection=projection,this.worldCoordinates=this.calculateWorldCoordinatesFromLatLng(this.projection)}function MapMarker(coordinate){if(!coordinate instanceof Coordinate)throw new TypeError("coordinate is not a Coordinate");this.coordinate=coordinate,this.MARKER_DIMENSIONS={width:56,height:63}}function MapArea(topLeftCorner,bottomRightCorner){this.topLeft=topLeftCorner,this.bottomRight=bottomRightCorner,this.width=this.bottomRight.worldCoordinates.x-this.topLeft.worldCoordinates.x,this.height=this.bottomRight.worldCoordinates.y-this.topLeft.worldCoordinates.y}function _getLatFraction(bounds){function _latRad(lat){var sin=Math.sin(lat*Math.PI/180),radX2=Math.log((1+sin)/(1-sin))/2;return Math.max(Math.min(radX2,Math.PI),-Math.PI)/2}return Math.abs((_latRad(bounds.getNorthEast().lat())-_latRad(bounds.getSouthWest().lat()))/Math.PI)}function _getLngFraction(bounds){var lngDiff=bounds.getNorthEast().lng()-bounds.getSouthWest().lng();return(lngDiff<0?lngDiff+360:lngDiff)/360}function _getZoom(mapPx,worldPx,fraction){return Math.floor(Math.log(mapPx/worldPx/fraction)/Math.LN2)}function _getCalculatedZoom(){var zoomBounds,latFraction,lngFraction,latZoom,lngZoom,zoomBoundsLiteral={};return markers.forEach(function(marker){(!zoomBoundsLiteral.east||marker.longitude>zoomBoundsLiteral.east)&&(zoomBoundsLiteral.east=parseFloat(marker.longitude)),(!zoomBoundsLiteral.north||marker.latitude<zoomBoundsLiteral.north)&&(zoomBoundsLiteral.north=parseFloat(marker.latitude)),(!zoomBoundsLiteral.south||marker.latitude>zoomBoundsLiteral.south)&&(zoomBoundsLiteral.south=parseFloat(marker.latitude)),(!zoomBoundsLiteral.west||marker.longitude<zoomBoundsLiteral.west)&&(zoomBoundsLiteral.west=parseFloat(marker.longitude))}),zoomBounds=new google.maps.LatLngBounds({lat:zoomBoundsLiteral.south,lng:zoomBoundsLiteral.west},{lat:zoomBoundsLiteral.north,lng:zoomBoundsLiteral.east}),latFraction=_getLatFraction(zoomBounds),lngFraction=_getLngFraction(zoomBounds),latZoom=_getZoom(staticMapSize.height,WORLD_DIM.height,latFraction),lngZoom=_getZoom(staticMapSize.width,WORLD_DIM.width,lngFraction),Math.min(latZoom,lngZoom,ZOOM_MAX)}function _getMapPositionUrlString(){var mapParams,LAT_PLACEHOLDER="---lat---",LNG_PLACEHOLDER="---lng---",ZOOM_PLACEHOLDER="---zoom---",centerUrlString="&center="+LAT_PLACEHOLDER+","+LNG_PLACEHOLDER,zoomUrlString="&zoom="+ZOOM_PLACEHOLDER;if(0===markers.length)return centerUrlString.replace(LAT_PLACEHOLDER,centerLat).replace(LNG_PLACEHOLDER,centerLng);var projection=new MercatorProjection,calculatedZoomLevel=_getCalculatedZoom(),zoomScale=Math.pow(2,calculatedZoomLevel),mapMarkers=markers.map(function(marker){return new MapMarker(new Coordinate(marker.latitude,marker.longitude,projection))}),northMarker=mapMarkers.reduce(function(previous,current){return previous.coordinate.worldCoordinates.y<current.coordinate.worldCoordinates.y?previous:current});centerPoint=centerLat&&centerLng?projection.fromLatLngToPoint(new google.maps.LatLng(centerLat,centerLng)):new google.maps.Point(mapMarkers.map(function(marker){return marker.coordinate.worldCoordinates.x}).reduce(function(total,value){return total+value},0)/mapMarkers.length,mapMarkers.map(function(marker){return marker.coordinate.worldCoordinates.y===northMarker.coordinate.worldCoordinates.y?northMarker.calculateTopEdge(zoomScale).worldCoordinates.y:marker.coordinate.worldCoordinates.y}).reduce(function(total,value){return total+value},0)/mapMarkers.length);var centerLocation=Coordinate.fromWorldCoordinate(centerPoint,projection);try{return mapParams=_calculateMapParameters(centerLocation.clone(),projection,mapMarkers,northMarker,calculatedZoomLevel),centerUrlString.replace(LAT_PLACEHOLDER,mapParams.center.latitude).replace(LNG_PLACEHOLDER,mapParams.center.longitude)+zoomUrlString.replace(ZOOM_PLACEHOLDER,mapParams.zoom)}catch(Error){return displayMarkers=!1,skipLogging.info("Could not render static map with all markers unobscured."),centerUrlString.replace(LAT_PLACEHOLDER,centerLocation.latitude).replace(LNG_PLACEHOLDER,centerLocation.longitude)+zoomUrlString.replace(ZOOM_PLACEHOLDER,calculatedZoomLevel)}}function _calculateMapParameters(centerLocation,projection,mapMarkers,northMarker,zoomLevel){var zoomScale=Math.pow(2,zoomLevel),xOffsets=[0],yOffsets=[0],mapBoundary=new MapArea(centerLocation.clone().pixelOffset(-staticMapSize.width/2,-staticMapSize.height/2,zoomScale),centerLocation.clone().pixelOffset(staticMapSize.width/2,staticMapSize.height/2,zoomScale)),deliveryTileBoundary=mapBoundary.topLeft.clone().pixelOffset(orderDetailsTileSize.width,orderDetailsTileSize.height,zoomScale),visibleMapAreas={bottom:new MapArea(new Coordinate(deliveryTileBoundary.latitude,mapBoundary.topLeft.longitude,projection).pixelOffset(mapBoundaryPadding,mapBoundaryPadding,zoomScale),mapBoundary.bottomRight.clone().pixelOffset(-mapBoundaryPadding,-mapBoundaryPadding,zoomScale)),right:new MapArea(new Coordinate(mapBoundary.topLeft.latitude,deliveryTileBoundary.longitude,projection).pixelOffset(mapBoundaryPadding,mapBoundaryPadding,zoomScale),mapBoundary.bottomRight.clone().pixelOffset(-mapBoundaryPadding,-mapBoundaryPadding,zoomScale))};mapMarkers.forEach(function(marker){var xAxisOffset=0,yAxisOffset=0,isVisible=visibleMapAreas.bottom.containsMarker(marker,zoomScale)||visibleMapAreas.right.containsMarker(marker,zoomScale);isVisible||(visibleMapAreas.bottom.height<visibleMapAreas.right.width?xAxisOffset=visibleMapAreas.right.topLeft.worldCoordinates.x-marker.calculateLeftEdge(zoomScale).worldCoordinates.x:yAxisOffset=visibleMapAreas.bottom.topLeft.worldCoordinates.y-marker.calculateTopEdge(zoomScale).worldCoordinates.y),xOffsets.push(xAxisOffset),yOffsets.push(yAxisOffset)});var xAxisOffset=-Math.max.apply(null,xOffsets),yAxisOffset=-Math.max.apply(null,yOffsets);centerLocation.worldCoordinateOffset(xAxisOffset,yAxisOffset),mapBoundary.offsetArea(xAxisOffset,yAxisOffset),deliveryTileBoundary.worldCoordinateOffset(xAxisOffset,yAxisOffset),visibleMapAreas.right.offsetArea(xAxisOffset,yAxisOffset),visibleMapAreas.bottom.offsetArea(xAxisOffset,yAxisOffset);var allVisible=mapMarkers.every(function(marker){return visibleMapAreas.bottom.containsMarker(marker,zoomScale)||visibleMapAreas.right.containsMarker(marker,zoomScale)});if(allVisible&&(mapMarkers.length>1||zoomLevel<15))return{center:centerLocation,zoom:zoomLevel};if(zoomLevel<=0)throw new Error("Cannot find solution to make all markers appear on map.");return _calculateMapParameters(centerLocation,projection,mapMarkers,northMarker,--zoomLevel)}function _getStylesUrlString(){return _mapStyles.reduce(function(stylesForURL,style){var stylers=style.stylers;return stylesForURL+="&style="+(style.featureType?"feature:"+style.featureType+(style.elementType?"%7C":""):"")+(style.elementType?"element:"+style.elementType:""),stylers.forEach(function(styler,index){Object.keys(styler).forEach(function(key){var property=styler[key];property&&(stylesForURL+=(index>stylers.length-1?"":"%7C")+key+":"+property.toString().replace("#","0x"))})}),stylesForURL},"")}function _getMarkersUrlString(){var iconURLPrefix="http://www.skipthedishes.com";return markers.reduce(function(markersForURL,marker){return markersForURL+="&markers=scale:"+scale+"%7Cicon:"+iconURLPrefix+(retina?marker.url_retina:marker.url)+"%7C"+marker.latitude+","+marker.longitude},"")}function _requestStaticMap(){var unsignedUrl=host+"?size="+(staticMapSize.width+"x"+staticMapSize.height)+"&scale="+scale+_getMapPositionUrlString()+"&maptype=roadmap&format="+format+"&visual_refresh=true"+(zoom?"&zoom="+zoom:"")+_getStylesUrlString()+(displayMarkers?_getMarkersUrlString():"")+"&client="+_googleMapsKey;$.post(_googleMapsSignUrl,{originalUrl:unsignedUrl},function(data){data.errorMessage?callback&&callback(data):$("<div>").load(data.signedUrl,{limit:25},function(responseText,textStatus){"success"===textStatus?$('<img src="'+data.signedUrl+'">').on("load",function(){$container.removeClass(loadingClass).css({"background-image":'url("'+data.signedUrl+'")'}),$loader.addClass("hidden"),data.success=!0,callback&&callback(data)}):(data.errorMessage="Load map url failed.",callback&&callback(data))})}).fail(function(){var response={errorMessage:"Load map request failed."};callback&&callback(response)})}function _offsetLoader(){var loaderOffsetX=0,loaderOffsetY=0;staticMapSize.width/orderDetailsTileSize.width>staticMapSize.height/orderDetailsTileSize.height?loaderOffsetX=orderDetailsTileSize.width-staticMapSize.width/2+60:loaderOffsetY=orderDetailsTileSize.height-staticMapSize.height/2+30,loaderOffsetY>0||loaderOffsetX>0?$loader.css("transform","translate("+Math.floor(loaderOffsetX)+"px, "+Math.floor(loaderOffsetY)+"px)"):$loader.removeAttr("style"),$loader.removeClass("hidden")}var centerPoint,WORLD_DIM={height:256,width:256},MERCATOR_RANGE=256,ZOOM_MAX=21,centerLat=params.latitude,centerLng=params.longitude,loadingClass=params.loadingClass,$loader=$(params.loaderSelector),$container=params.$container,callback=params.callback,markers=params.markers||[],retina=window.devicePixelRatio>=2,scale=retina?2:1,width=params.width,height=params.height,staticMapSize={width:width||$container.outerWidth()||800,height:height||$container.outerHeight()||800},format=retina?"png8":"png32",zoom=params.zoom&&width&&height?params.zoom:null,host="https://maps.googleapis.com/maps/api/staticmap",$orderDetailsTile=$(params.orderDetailsTileSelector),orderDetailsTileSize={width:$orderDetailsTile.outerWidth(),height:$orderDetailsTile.outerHeight()},mapBoundaryPadding=parseInt($orderDetailsTile.css("padding-top"))-5,displayMarkers=!0;MercatorProjection.prototype.fromLatLngToPoint=function(latLng){var self=this,point=new google.maps.Point(0,0),origin=self.pixelOrigin,siny=_bound(Math.sin(_degreesToRadians(latLng.lat())),-.9999,.9999);return point.x=origin.x+latLng.lng()*self.pixelsPerLngDegree,point.y=origin.y+.5*Math.log((1+siny)/(1-siny))*-self.pixelsPerLngRadian,point},MercatorProjection.prototype.fromPointToLatLng=function(point){var self=this,origin=self.pixelOrigin,lng=(point.x-origin.x)/self.pixelsPerLngDegree,_latRadians=(point.y-origin.y)/-self.pixelsPerLngRadian,lat=radiansToDegrees(2*Math.atan(Math.exp(_latRadians))-Math.PI/2);return new google.maps.LatLng(lat,lng)},Coordinate.prototype.calculateLatLngFromWorldCoordinates=function(){return this.projection.fromPointToLatLng(new google.maps.Point(this.worldCoordinates.x,this.worldCoordinates.y))},Coordinate.prototype.calculateWorldCoordinatesFromLatLng=function(){return this.projection.fromLatLngToPoint(new google.maps.LatLng(this.latitude,this.longitude))},Coordinate.prototype.calculateWorldCoordinatesFromPixels=function(pixelX,pixelY,zoomScale){return new google.maps.Point(pixelX/zoomScale,pixelY/zoomScale)},Coordinate.prototype.calculatePixelCoordinates=function(zoomScale){return new google.maps.Point(this.worldCoordinates.x*zoomScale,this.worldCoordinates.y*zoomScale)},Coordinate.prototype.updateLocationFromPixelCoordinates=function(pixelX,pixelY,zoomScale){this.worldCoordinates=this.calculateWorldCoordinatesFromPixels(pixelX,pixelY,zoomScale);var newLocation=this.calculateLatLngFromWorldCoordinates(this.projection);this.latitude=newLocation.lat(),this.longitude=newLocation.lng()},Coordinate.prototype.pixelOffset=function(offsetX,offsetY,zoomScale){var pixelCoordinates=this.calculatePixelCoordinates(zoomScale);return this.updateLocationFromPixelCoordinates(pixelCoordinates.x+offsetX,pixelCoordinates.y+offsetY,zoomScale),this},Coordinate.prototype.worldCoordinateOffset=function(offsetX,offsetY){this.worldCoordinates=new google.maps.Point(this.worldCoordinates.x+offsetX,this.worldCoordinates.y+offsetY);var newLocation=this.calculateLatLngFromWorldCoordinates(this.projection);return this.latitude=newLocation.lat(),this.longitude=newLocation.lng(),this},Coordinate.prototype.clone=function(){return new Coordinate(this.latitude,this.longitude,this.projection)},Coordinate.fromWorldCoordinate=function(point,projection){var latLng=projection.fromPointToLatLng(point);return new Coordinate(latLng.lat(),latLng.lng(),projection)},MapMarker.prototype.calculateTopEdge=function(zoomScale){return this.coordinate.clone().pixelOffset(0,-this.MARKER_DIMENSIONS.height,zoomScale)},MapMarker.prototype.calculateRightEdge=function(zoomScale){return this.coordinate.clone().pixelOffset(this.MARKER_DIMENSIONS.width/2,-this.MARKER_DIMENSIONS.height/2,zoomScale)},MapMarker.prototype.calculateLeftEdge=function(zoomScale){return this.coordinate.clone().pixelOffset(-this.MARKER_DIMENSIONS.width/2,-this.MARKER_DIMENSIONS.height/2,zoomScale)},MapArea.prototype.offsetArea=function(offsetX,offsetY){this.topLeft.worldCoordinateOffset(offsetX,offsetY),this.bottomRight.worldCoordinateOffset(offsetX,offsetY)},MapArea.prototype.containsMarker=function(marker,zoomScale){if(!marker instanceof MapMarker)throw new TypeError("marker is not a MapMarker");var topEdge=marker.calculateTopEdge(zoomScale),rightEdge=marker.calculateRightEdge(zoomScale),leftEdge=marker.calculateLeftEdge(zoomScale),withinVerticalBoundary=topEdge.worldCoordinates.y>=this.topLeft.worldCoordinates.y&&marker.coordinate.worldCoordinates.y<=this.bottomRight.worldCoordinates.y,withinHorizontalBoundary=leftEdge.worldCoordinates.x>=this.topLeft.worldCoordinates.x&&rightEdge.worldCoordinates.x<=this.bottomRight.worldCoordinates.x;return withinVerticalBoundary&&withinHorizontalBoundary},_showStaticMapLoader=function(){_offsetLoader(),$container.addClass(loadingClass).css("background-image","none")},_reloadStaticMap=function(){mapBoundaryPadding=parseInt($orderDetailsTile.css("padding-top"))-5,displayMarkers=!0,staticMapSize={width:$container.outerWidth()||800,height:$container.outerHeight()||800},orderDetailsTileSize={width:$orderDetailsTile.outerWidth(),height:$orderDetailsTile.outerHeight()},_showStaticMapLoader(),_requestStaticMap()},window.screen.deviceXDPI&&(window.devicePixelRatio=parseInt(window.screen.deviceXDPI/window.screen.logicalXDPI)),width&&height||$container.css("background-size","cover"),_requestStaticMap()}var _map,_bounds,_googleMapsSignUrl,_googleMapsKey,_googleMapsApiVersion,_mapStyles,_showStaticMapLoader,_reloadStaticMap,_mapBackgroundColor="#F0ECE4";return{init:function(params){_mapStyles=params.googleMapsStyles&&params.googleMapsStyles.length?params.googleMapsStyles:[],_googleMapsKey=params.googleMapsKey,_googleMapsSignUrl=params.googleMapsSignUrl,_googleMapsApiVersion=params.googleMapsApiVersion},addMapMarker:function(longitude,latitude,markerUrl,size,anchor){$(document).ready(function(){_addMapMarker(longitude,latitude,markerUrl,size,anchor)})},createMarker:function(longitude,latitude,markerUrl,size,anchor){return{latitude:latitude,longitude:longitude,url:markerUrl,size:size,anchor:anchor}},fitMapToMarkers:function(){$(document).ready(function(){_fitMapToMarkers()})},loadStaticGoogleMaps:function(params){_loadStaticGoogleMaps(params)},loadGoogleMaps:function(params){_loadGoogleMaps(params)},initializeGoogleMaps:function(params){return _initializeGoogleMaps(params)},reloadStaticMap:function(){_reloadStaticMap()},showStaticMapLoader:function(){_showStaticMapLoader()}}}(window.skipthedishes.Logging);